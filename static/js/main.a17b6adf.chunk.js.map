{"version":3,"sources":["FormMonitoring/index.js","App.js","reportWebVitals.js","index.js"],"names":["BasicForm","useState","id","setId","setPokemon","invalidId","setInvalidId","type","value","onChange","e","target","onClick","axios","get","then","res","data","catch","className","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRA2CeA,EAtCE,WAGb,MAAoBC,mBAAS,GAA7B,mBAAOC,EAAP,KAAWC,EAAX,KACA,EAA8BF,mBAAS,MAAvC,mBAAgBG,GAAhB,WACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KAaA,OAAO,gCACC,gDACI,uBAAOC,KAAK,OAAOC,MAAON,EAAIO,SAAU,SAAAC,GAAC,OAAEP,EAAMO,EAAEC,OAAOH,aAE9D,wBAASI,QAfC,WACdC,IAAMC,IAAN,4CAA+CZ,IAC1Ca,MAAK,SAAAC,GACFX,GAAaC,GAAa,GAC1BF,EAAWY,EAAIC,SAChBC,OAAM,SAAAR,GACLJ,GAAa,GACbF,EAAW,UAQf,oBAEI,qBAAKe,UAAU,eAAf,SACKd,GAAa,4DCnBnBe,MARf,WACE,OACE,qBAAKD,UAAU,MAAf,SACE,cAAC,EAAD,OCMSE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a17b6adf.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./index.css\"\n\n\nconst BasicForm =()=>{\n\n    /* Simple form to test synthetic monitoring */\n    const [id, setId] = useState(1);\n    const [pokemon, setPokemon] = useState(null);\n    const [invalidId, setInvalidId] = useState(false)\n\n    const searchBtn = ()=>{\n        axios.get(`https://pokeapi.co/api/v2/pokemon/${id}`)\n            .then(res => {\n                invalidId && setInvalidId(false);\n                setPokemon(res.data)\n            }).catch(e=>{\n                setInvalidId(true);\n                setPokemon(null);\n            });\n    }\n\n    return <div>\n            <label>Pokemon Id:\n                <input type=\"text\" value={id} onChange={e=>setId(e.target.value)} />\n            </label>\n            <button  onClick={searchBtn}>Search</button>\n            \n                <div className=\"form-content\">\n                    {invalidId && <span>Invalid Pokemon Id</span>}\n                    {/*pokemon && \n                        <>\n                            <img src={pokemon.sprites.front_default} alt=\"#\" />\n                            <span>{pokemon.name}</span>\n                        </>\n                    */}\n                </div>\n        </div>;\n\n\n}\n\nexport default BasicForm;","import './App.css';\nimport FormMonitoring from \"./FormMonitoring\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FormMonitoring/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}